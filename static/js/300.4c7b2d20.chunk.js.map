{"version":3,"file":"static/js/300.4c7b2d20.chunk.js","mappings":"yNACA,GAAgB,kBAAoB,mCAAmC,gBAAkB,iCAAiC,iBAAmB,kCAAkC,uBAAyB,yC,UCAxM,K,SCcA,EAVsB,SAAC,GAAgB,IAAfA,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACpBC,EAAO,YAAcF,EAEzB,OACI,gBAAKG,UAAWC,EAAAA,OAAhB,UACI,SAAC,KAAD,CAAMC,GAAIH,EAAV,SAAiBD,OCT7B,KCQA,EANgBK,EAAAA,MAAW,YAAgB,IAAdC,EAAa,EAAbA,QACzB,OACI,gBAAKJ,UAAWC,EAAAA,YAAhB,SAAsCG,OCGxCC,GAAYC,EAAAA,EAAAA,GAAiB,GAE7BC,EAAUJ,EAAAA,MAAW,YAAiD,IAA9CK,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAEjDC,EAAkBH,EAAYI,KAAI,SAAAC,GAAM,OACxC,SAAC,EAAD,CAAef,KAAMe,EAAOf,KAAsBD,GAAIgB,EAAOhB,IAAtBgB,EAAOhB,OAE9CiB,EAAmBL,EAAaG,KAAI,SAAAG,GAAG,OACvC,SAAC,EAAD,CAASX,QAASW,EAAIX,SAAcW,EAAIlB,OAO5C,OACI,gBAAKG,UAAWC,EAAAA,OAAhB,UACI,iBAAKD,UAAWC,EAAAA,kBAAhB,WACI,iBAAKD,UAAWC,EAAAA,gBAAhB,WACI,gBAAKD,UAAWC,EAAAA,sBAAhB,sBAGA,gBAAKD,UAAWC,EAAAA,qBAAhB,SACKU,QAGT,iBAAKX,UAAWC,EAAAA,iBAAhB,WACI,gBAAKD,UAAWC,EAAAA,uBAAhB,uBAGA,gBAAKD,UAAWC,EAAAA,sBAAhB,SACKa,KAEL,SAACE,EAAD,CAAqBC,SAtBjB,SAACC,GACjBR,EAAYQ,EAAOC,8BA4BrBC,EAAiBjB,EAAAA,MAAW,YAAqB,IAAnBkB,EAAkB,EAAlBA,aAChC,OACI,kBAAMJ,SAAUI,EAAcrB,UAAWC,EAAAA,gBAAzC,WACI,gBAAKD,UAAWC,EAAAA,uBAAhB,UACI,SAACqB,EAAA,EAAD,CACIC,UAAWC,EAAAA,GACX1B,KAAK,iBACL2B,SAAU,CAACC,EAAAA,EAAUrB,GACrBsB,MAAM,uBAGd,mBAAQ3B,UAAWC,EAAAA,iBAAnB,wBAKNe,GAAsBY,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,CAA4CR,GAExE,I,mBC3CA,GAAeU,E,QAAAA,KACXC,EAAAA,EAAAA,KAjBkB,SAACC,GACnB,MAAO,CACHxB,YAAawB,EAAMC,aAAazB,YAChC0B,eAAgBF,EAAMC,aAAaC,eACnCzB,aAAcuB,EAAMC,aAAaxB,iBAIhB,SAAC0B,GACtB,MAAO,CACHzB,YAAa,SAACS,GACVgB,GAASC,EAAAA,EAAAA,GAAyBjB,SAO1CkB,EAAAA,EAFJ,CAGE9B","sources":["webpack://react-app-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/Friends/Friends.module.css","components/Dialogs/Friends/Friends.jsx","components/Dialogs/Message/Message.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/Dialogs-container.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialog__container\":\"Dialogs_dialog__container__cuGV+\",\"dialog__friends\":\"Dialogs_dialog__friends__+t8mp\",\"dialog__messages\":\"Dialogs_dialog__messages__QGeHv\",\"writeMessage__textArea\":\"Dialogs_writeMessage__textArea__Tt3iq\"};","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport classes from './Friends.module.css';\r\n\r\n\r\nconst FriendDialoge = ({id, name}) => {\r\n    let path = \"/dialogs/\" + id;\r\n\r\n    return (\r\n        <div className={classes.friend}>\r\n            <Link to={path}>{name}</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FriendDialoge;","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\r\nimport classes from './Message.module.css';\r\n\r\nconst Message = React.memo(({message}) => {\r\n    return (\r\n        <div className={classes.messageText}>{message}</div>\r\n    );\r\n});\r\n\r\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport required, { maxLengthCreator } from '../../utils/validators/validator';\r\nimport { TextArea } from '../common/FormsControls/FormsControls';\r\nimport classes from './Dialogs.module.css';\r\nimport FriendDialoge from './Friends/Friends';\r\nimport Message from './Message/Message';\r\n\r\nconst maxLenght = maxLengthCreator(5);\r\n\r\nconst Dialogs = React.memo(({ dialogsData, messagesData, sendMessage }) => {\r\n\r\n    let friendsElements = dialogsData.map(dialog =>\r\n        <FriendDialoge name={dialog.name} key={dialog.id} id={dialog.id}\r\n        />);\r\n    let messagesElements = messagesData.map(mes =>\r\n        <Message message={mes.message} key={mes.id}\r\n        />);\r\n\r\n    let addNewMessage = (values) => {\r\n        sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.dialog}>\r\n            <div className={classes.dialog__container}>\r\n                <div className={classes.dialog__friends}>\r\n                    <div className={classes.dialog__friends_title}>\r\n                        Friends\r\n                    </div>\r\n                    <div className={classes.dialog__friends_list}>\r\n                        {friendsElements}\r\n                    </div>\r\n                </div>\r\n                <div className={classes.dialog__messages}>\r\n                    <div className={classes.dialog__messages_title}>\r\n                        Messages\r\n                    </div>\r\n                    <div className={classes.dialog__messages_list}>\r\n                        {messagesElements}\r\n                    </div>\r\n                    <AddMessageFormRedux onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst addMessageForm = React.memo(({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit} className={classes.messages__input}>\r\n            <div className={classes.writeMessage__textArea}>\r\n                <Field\r\n                    component={TextArea}\r\n                    name='newMessageBody'\r\n                    validate={[required, maxLenght]}\r\n                    label=\"Write your post\"\r\n                />\r\n            </div>\r\n            <button className={classes.messages__button}>Send</button>\r\n        </form>\r\n    );\r\n});\r\n\r\nconst AddMessageFormRedux = reduxForm({ form: 'dialogAddMessageForm' })(addMessageForm);\r\n\r\nexport default Dialogs;","import { sendMessageActionCreator } from '../../redux/reducers/messages-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsData: state.messagesPage.dialogsData,\r\n        newMessageText: state.messagesPage.newMessageText,\r\n        messagesData: state.messagesPage.messagesData,\r\n    };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageActionCreator(newMessageBody));\r\n        },\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect,\r\n)(Dialogs);"],"names":["id","name","path","className","classes","to","React","message","maxLenght","maxLengthCreator","Dialogs","dialogsData","messagesData","sendMessage","friendsElements","map","dialog","messagesElements","mes","AddMessageFormRedux","onSubmit","values","newMessageBody","addMessageForm","handleSubmit","Field","component","TextArea","validate","required","label","reduxForm","form","compose","connect","state","messagesPage","newMessageText","dispatch","sendMessageActionCreator","withAuthRedirect"],"sourceRoot":""}